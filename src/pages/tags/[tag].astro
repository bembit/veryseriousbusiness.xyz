---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Type from '../../components/posts/Type.astro';
import Post from '../../components/posts/Post.astro';

// this
export const prerender = true;

export async function getStaticPaths() {
	const allPosts = await getCollection("posts");

	// def not a long term solution. or is it
	const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

	return uniqueTags.map((tag) => {
		let filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
		filteredPosts = filteredPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const { posts } = Astro.props;

---
<BaseLayout pageTitle={tag}>
<main>

	<article class="">
	<Type typeTitle={tag + "."} routeTitle="tag" />

	<p>Posts tagged with "{tag}": {posts.length}</p>
	<br>
	<ul>
		{posts.map((post) =>
		<Post post={post} />
		)}
	</ul>
	</article>

</main>

</BaseLayout>
