---
import MobileNav from "./MobileNav.astro";
---

<header>

    <div>
        <h1>VerySeriousBusiness</h1>
        <div class="subtitle"><p>sex.</p><span>love.</span> <p>and</p> <span>debugs.</span></div> 
    </div>
    <div class="tiny-menu">

        <button id="themeToggle" aria-label="Toggle theme">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                <path id="darkMode" fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
                <path id="lightMode" fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
            </svg>
        </button>
        <MobileNav />

    </div>

</header>

<style>
    header {
        position: absolute;
        top: 0;
        left: 0;
        min-height: var(--header-height);
        width: calc(100% - var(--nav-width));
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;
        color: var(--text-primary);
        padding-left: var(--header-height);
        padding-right: 25px;
        margin-left: var(--nav-width);
        border-left: var(--borders);
        border-right: var(--borders);
        border-radius: var(--border-rounded);
    }

    header h1 {
        font-weight: 900;
    }

    /* subtitle decoration */

    header div:not(.subtitle) {
        display: flex;
    }

    header div.subtitle {
        font-size: 1.5rem;
        font-weight: 900;
    }

    header div p {
        display: inline-block;
    }

    header div p:first-of-type {
        transform: translateX(15px);
        text-decoration: line-through;
    }

    header span:first-of-type:not(.material-icons) {
        font-size: 2.2rem;
        color: var(--tertiary);
        display: inline-block;
        transform: rotate(10deg);
    }

    header span:last-of-type:not(.material-icons) {
        font-size: 2.6rem;
        color: var(--tertiary);
        display: inline-block;
        transform: rotate(-10deg);
        text-decoration: underline;
    }

    /* right side tiny menu */

    header > .tiny-menu {
        padding: 1rem 2rem;
        background-color: var(--background-minimal);
        font-weight: 700;
        text-transform: uppercase;
        font-size: 1.4rem;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        position: relative;
        user-select: none;
    }

    header span.material-icons {
        font-size: 2.6rem;
        display: inline-block;
    }

    header span.material-icons:hover {
        color: var(--text-secondary);
    }

    #themeToggle {
        border: none;
        background: none;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    #themeToggle:hover {
        cursor: pointer;
    }
    svg {
        width: 24px;
    }
    svg:first-of-type {
        fill: var(--text-primary);
    }


    @media (max-width: 1650px) {
        header {
            padding-left: calc(var(--header-height) / 2);
            padding-right: calc(var(--header-height) / 4);
        }
    }
    @media (max-width: 1250px) {
        header {
            padding-left: calc(var(--header-height) / 4);
        }
    }
    @media screen and (max-width: 1100px) {
        header {
            /*  */
            h1 {
                margin-left: 10px;
                transform: translateY(-5px);
            }
            div.subtitle {
                position: absolute;
                top: 45%;
                left: 20%;
                font-size: 1rem;
            }
            div.subtitle p:first-of-type {
                transform: translateX(10px);
            }
            span:first-of-type:not(.material-icons) {
                font-size: 1.4rem;
                transform: rotate(5deg);
            }
            span:last-of-type:not(.material-icons) {
                font-size: 1.6rem;
                transform: rotate(-5deg);
            }
    }
    @media (max-width: 950px) {
        header {
            width: 100%;
            position: relative;
            margin-left: 0;
            h1 {
                margin-left: 0;
            }
            div.subtitle {
                position: absolute;
                top: 45%;
                left: 20%;
                font-size: 1rem;
                /* transform: translateY(-5px); */
            }
            div.subtitle p:first-of-type {
                transform: translateX(10px);
            }
            span:first-of-type:not(.material-icons) {
                font-size: 1.4rem;
                transform: rotate(5deg);
            }
            span:last-of-type:not(.material-icons) {
                font-size: 1.6rem;
                transform: rotate(-5deg);
            }
        }

        header span.material-icons:not(:nth-child(1)) {
            margin-right: 0;
        }
    }

    }
    @media (max-width: 600px) {
        header {
            width: 100%;
            padding-left: 25px;
            padding-right: 25px;
            position: relative;
            margin-left: 0;
            h1 {
                margin-left: 0;
                font-size: 2.6rem;
            }
        }
    }
    @media (max-width: 500px) {
        header {
            padding: 0px 10px;
        }
        header h1 {
            font-size: 2rem;
        }   
        header div.subtitle {
            position: absolute;
            top: 45%;
            left: 10%;
            /* font-size: 1rem; */
            transform: translateY(-3px);
        }
        header div.subtitle p:first-of-type {
            transform: translateX(10px);
        }
        header span:first-of-type:not(.material-icons) {
            font-size: 1.8rem;
            transform: rotate(5deg);
        }
        header span:last-of-type:not(.material-icons) {
            font-size: 2.2rem;
            transform: rotate(-5deg);
        }
        header > div:last-of-type {
            border-bottom: none;
            /* background: initial; */
        }
        header .tiny-menu {
            padding-left: 0;
            padding-right: 0;
            background-color: inherit;
        }
        @media (max-width: 350px) {
            header h1 {
                font-size: 1.6rem;
            }   
            header div.subtitle {
                position: absolute;
                top: 45%;
                left: 10%;
                font-size: 1rem;
                transform: translateY(-3px);
            }
            header div.subtitle p:first-of-type {
                transform: translateX(10px);
            }
            header span:first-of-type:not(.material-icons) {
                font-size: 1.2rem;
                transform: rotate(5deg);
            }
            header span:last-of-type:not(.material-icons) {
                font-size: 1.6rem;
                transform: rotate(-5deg);
            }
        }

</style>

<script>

document.addEventListener('astro:after-swap', () => {
    const currentTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    applyTheme(currentTheme);
});

document.addEventListener('astro:page-load', () => {
    const theme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    applyTheme(theme);
    document.body.classList.remove('load');
    document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
});

function applyTheme(theme) {
    const root = document.documentElement;
    const darkModeIcon = document.getElementById("darkMode");
    const lightModeIcon = document.getElementById("lightMode");
    if (theme === 'dark') {
        root.style.setProperty('--text-primary', getComputedStyle(root).getPropertyValue('--text-primary-dark'));
        root.style.setProperty('--text-secondary', getComputedStyle(root).getPropertyValue('--text-secondary-dark'));
        root.style.setProperty('--background', getComputedStyle(root).getPropertyValue('--background-primary-dark'));
        root.style.setProperty('--background-minimal', getComputedStyle(root).getPropertyValue('--background-minimal-dark'));
        root.style.setProperty('--tertiary', getComputedStyle(root).getPropertyValue('--tertiary-dark'));

        darkModeIcon.style.display = 'none';
        lightModeIcon.style.display = 'inline';
    } else {
        root.style.setProperty('--text-primary', getComputedStyle(root).getPropertyValue('--text-primary-light'));
        root.style.setProperty('--text-secondary', getComputedStyle(root).getPropertyValue('--text-secondary-light'));
        root.style.setProperty('--background', getComputedStyle(root).getPropertyValue('--background-primary-light'));
        root.style.setProperty('--background-minimal', getComputedStyle(root).getPropertyValue('--background-minimal-light'));
        root.style.setProperty('--tertiary', getComputedStyle(root).getPropertyValue('--tertiary-light'));

        darkModeIcon.style.display = 'inline';
        lightModeIcon.style.display = 'none';
    }

    localStorage.setItem('theme', theme);
}

function handleToggleClick() {
    const currentTheme = localStorage.getItem('theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    applyTheme(newTheme);
}

</script>