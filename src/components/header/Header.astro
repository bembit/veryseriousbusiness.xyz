---
---

<header>

    <div>
        <h1>VerySeriousBusiness</h1>
        <div class="subtitle"><p>sex.</p><span>love.</span> <p>and</p> <span>debugs.</span></div> 
    </div>
    <div class="tiny-menu">

        <button id="themeToggle">
            <span id="darkMode" class="material-icons">dark_mode</span>
            <span id="lightMode" class="material-icons">light_mode</span>
        </button>
            <span id="mobile-nav-toggle" class="material-icons">menu</span>
        
        <nav>
            <a href="/">Home</a>
            <a class="nav-link" href="/tags">Tags</a>
        </nav>
    </div>

</header>

<style>

    header {
        position: absolute;
        top: 0;
        left: 0;
        min-height: var(--header-height);
        width: calc(100% - var(--nav-width));
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        justify-content: space-between;
        color: var(--text-primary);
        padding-left: var(--header-height);
        padding-right: 25px;
        margin-left: var(--nav-width);
        border-left: var(--borders);
        border-right: var(--borders);
        border-radius: var(--border-rounded);
    }

    header h1 {
        font-weight: 900;
    }

    /* subtitle decoration */

    header div:not(.subtitle) {
        display: flex;
    }

    header div.subtitle {
        font-size: 1.5rem;
        font-weight: 900;
    }

    header div p {
        display: inline-block;
    }

    header div p:first-of-type {
        transform: translateX(15px);
        text-decoration: line-through;
    }

    header span:first-of-type:not(.material-icons) {
        font-size: 2.2rem;
        color: var(--tertiary);
        display: inline-block;
        transform: rotate(10deg);
    }

    header span:last-of-type:not(.material-icons) {
        font-size: 2.6rem;
        color: var(--tertiary);
        display: inline-block;
        transform: rotate(-10deg);
        text-decoration: underline;
    }

    /* right side tiny menu */

    header > div:last-of-type {
        padding: 1rem 2rem;
        background-color: #0000000a;
        font-weight: 700;
        text-transform: uppercase;
        font-size: 1.4rem;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        /* border-bottom: 1px solid var(--transparent-white); */
    }

    header nav a:not(:last-of-type) {
        margin-left: 1rem;
        margin-right: 1rem;
    }

    header nav a:hover {
        color: var(--text-secondary);
    }

    header span.material-icons {
        font-size: 2.6rem;
        display: inline-block;
        margin-right: 1rem;
    }

    header span.material-icons:hover {
        color: var(--text-secondary);
    }

    #mobile-nav-toggle {
        display: none;
    }

    #themeToggle {
        border: none;
        background: none;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    #darkMode {
        color: var(--text-primary);
    }
    #darkMode:hover {
        color: var(--text-secondary);
        cursor: pointer;
    }
    #lightMode {
        color: var(--text-secondary);
    }
    #lightMode:hover {
        color: var(--text-primary);
        cursor: pointer;
    }


    @media (max-width: 1650px) {
        header {
            padding-left: calc(var(--header-height) / 2);
            padding-right: calc(var(--header-height) / 4);
        }
    }
    @media (max-width: 1250px) {
        header {
            padding-left: calc(var(--header-height) / 4);
        }
    }
    @media screen and (max-width: 1100px) {
        #mobile-nav-toggle {
            display: block;
        }
        header {
            /*  */
            h1 {
                margin-left: 10px;
                transform: translateY(-5px);
            }
            div.subtitle {
                position: absolute;
                top: 45%;
                left: 20%;
                font-size: 1rem;
                /* transform: translateY(-5px); */
            }
            div.subtitle p:first-of-type {
                transform: translateX(10px);
            }
            span:first-of-type:not(.material-icons) {
                font-size: 1.4rem;
                transform: rotate(5deg);
            }
            span:last-of-type:not(.material-icons) {
                font-size: 1.6rem;
                transform: rotate(-5deg);
            }
    }
    @media (max-width: 950px) {
        header {
            width: 100%;
            position: relative;
            margin-left: 0;
            h1 {
                /* font-size: 1.8rem; */
                margin-left: 0;
            }
            div.subtitle {
                position: absolute;
                top: 45%;
                left: 20%;
                font-size: 1rem;
                /* transform: translateY(-5px); */
            }
            div.subtitle p:first-of-type {
                transform: translateX(10px);
            }
            span:first-of-type:not(.material-icons) {
                font-size: 1.4rem;
                transform: rotate(5deg);
            }
            span:last-of-type:not(.material-icons) {
                font-size: 1.6rem;
                transform: rotate(-5deg);
            }
        }
        header nav {
            display: none;
        }
        header span.material-icons:not(:nth-child(1)) {
            margin-right: 0;
        }
    }

    }
    @media (max-width: 600px) {
        header {
            width: 100%;
            padding-left: 25px;
            padding-right: 25px;
            position: relative;
            margin-left: 0;
            h1 {
                margin-left: 0;
                font-size: 2.6rem;
            }
        }
    }
    @media (max-width: 500px) {
        header {
            padding: 0px 5px;
        }
        header h1 {
            font-size: 2rem;
        }   
        header div.subtitle {
            position: absolute;
            top: 45%;
            left: 10%;
            /* font-size: 1rem; */
            transform: translateY(-3px);
        }
        header div.subtitle p:first-of-type {
            transform: translateX(10px);
        }
        header span:first-of-type:not(.material-icons) {
            font-size: 1.8rem;
            transform: rotate(5deg);
        }
        header span:last-of-type:not(.material-icons) {
            font-size: 2.2rem;
            transform: rotate(-5deg);
        }
        header > div:last-of-type {
            border-bottom: none;
            /* background: initial; */
        }
    }

</style>

<script>

document.addEventListener('astro:after-swap', () => {
    const currentTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    applyTheme(currentTheme);
});

document.addEventListener('astro:page-load', () => {
    const theme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    applyTheme(theme);

    document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
});

function applyTheme(theme) {
    const root = document.documentElement;
    const darkModeIcon = document.getElementById("darkMode");
    const lightModeIcon = document.getElementById("lightMode");
    // make it a switch case with more themes later
    if (theme === 'dark') {
        root.style.setProperty('--text-primary', getComputedStyle(root).getPropertyValue('--text-primary-dark'));
        root.style.setProperty('--text-secondary', getComputedStyle(root).getPropertyValue('--text-secondary-dark'));
        root.style.setProperty('--background', getComputedStyle(root).getPropertyValue('--background-primary-dark'));
        root.style.setProperty('--tertiary', getComputedStyle(root).getPropertyValue('--tertiary-dark'));

        darkModeIcon.style.display = 'none';
        lightModeIcon.style.display = 'inline';
    } else {
        root.style.setProperty('--text-primary', getComputedStyle(root).getPropertyValue('--text-primary-light'));
        root.style.setProperty('--text-secondary', getComputedStyle(root).getPropertyValue('--text-secondary-light'));
        root.style.setProperty('--background', getComputedStyle(root).getPropertyValue('--background-primary-light'));
        root.style.setProperty('--tertiary', getComputedStyle(root).getPropertyValue('--tertiary-light'));

        darkModeIcon.style.display = 'inline';
        lightModeIcon.style.display = 'none';
    }

    localStorage.setItem('theme', theme);
}

function handleToggleClick() {
    const currentTheme = localStorage.getItem('theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    applyTheme(newTheme);
}



</script>